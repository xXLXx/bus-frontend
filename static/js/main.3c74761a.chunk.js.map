{"version":3,"sources":["config.js","utils.js","actions/types.js","reducers/busStopsReducer.js","reducers/index.js","actions/busStopsActions.js","api/app.js","sagas/busStopsSaga.js","sagas/index.js","store.js","components/layouts/main.js","assets/images/spinner.svg","components/loader/loader.js","components/busStopMarker/busStopMarker.js","routes/busStops/busStopsMap/index.js","routes/busStops/index.js","App.js","reportWebVitals.js","index.js"],"names":["maps","apiKey","process","defaultCenter","lat","lng","defaultZoom","api","baseUrl","store","debug","toQuery","data","Object","keys","reduce","acc","key","encodeURIComponent","BUS_STOPS_FETCH","BUS_STOPS_FETCH_SUCCESS","BUS_STOPS_FETCH_FAILURE","BUS_STOPS_FILTER","BUS_STOP_SET_SELECTED","BUS_STOP_FETCH","BUS_STOP_FETCH_SUCCESS","BUS_STOP_FETCH_FAILURE","initialState","busStops","filters","isLoading","isLastPage","errorMessage","selectedBusStop","selectedBusStopIndex","reducers","nameReducerMap","reducer","state","action","newState","config","console","info","type","JSON","parse","stringify","combineReducers","payload","reset","updatedBusStops","index","shouldUpdate","undefined","details","getBusStops","getBusStopsSuccess","getBusStopsFailure","error","setBusStopsFilter","setSelectedBusStop","getBusStop","byId","getBusStopSuccess","getBusStopFailure","axios","create","baseURL","timeout","headers","request","method","url","a","responseData","success","Error","message","response","saga","dispatch","fetchBusStops","fetchBusStop","findIndex","busStop","id","length","StoreContext","createContext","StoreProvider","children","combinedReducers","useReducer","sagaActions","useRef","enhancedDispatch","current","push","applyMiddleware","actions","dispatchActions","useActions","actionTemplates","runSagas","useCallback","splice","Promise","all","sagas","map","useEffect","Provider","value","Main","className","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","transform","attributeName","repeatCount","dur","values","keyTimes","fill","d","SvgSpinner","_ref","svgRef","title","titleId","props","xmlns","xmlnsXlink","style","margin","background","display","shapeRendering","width","height","viewBox","preserveAspectRatio","ref","ForwardRef","Loader","fixed","absolute","clsx","memo","BusStopMarker","busStopIndex","onInfoChanged","useContext","getBusStopDetail","name","nextArrivals","schedule","time","split","utcDate","moment","utc","date","day","hours","Number","minutes","scheduleDate","local","bus","format","from","Date","onMarkerClick","position","options","pixelOffset","onClick","BusStopsMap","infoWindow","useState","setMap","mapDimens","setMapDimens","userLocation","setUserLocation","isInit","setIsInit","infoWindowInfo","setInfoWindowInfo","Config","mapCenter","setMapCenter","isLoaded","useJsApiLoader","googleMapsApiKey","initMapDimensions","initUserLocation","window","addEventListener","removeEventListener","near","setCenter","innerWidth","innerHeight","resolve","reject","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","onLoad","loadedMap","onUnmount","onCenterChanged","center","getCenter","open","mapContainerStyle","zoom","ele","BusStops","match","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c74761a.chunk.js","sourcesContent":["/**\n * Configuration\n */\nexport default {\n  maps: {\n    apiKey: process.env.REACT_APP_MAPS_API_KEY,\n    defaultCenter: { lat: -34.397, lng: 150.644 },\n    defaultZoom: 15\n  },\n  api: {\n    baseUrl: process.env.REACT_APP_API_BASE_URL,\n    apiKey: process.env.REACT_APP_API_KEY\n  },\n  store: {\n    debug: process.env.NODE_ENV === 'development' ? true : false\n  }\n}\n","import config from 'config';\n\n/**\n * Await-able HtML5 get location\n */\nexport const getCurrentLocation = () => {\n  return new Promise(function(resolve, reject) {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    } else {\n      reject(new Error('Your browser doesn\\'t support geolocation.'));\n    }\n  });\n}\n\n/**\n * Combines reducers to generate a { initialState, reducer } object just like in redux-saga\n */\nexport const combineReducers = (nameReducerMap) => {\n  const initialState = {};\n  for (const key in nameReducerMap) {\n    initialState[key] = nameReducerMap[key]?.initialState;\n  }\n\n  const reducer = (state = initialState, action) => {\n    const newState = {...state};\n\n    if (config.store.debug) {\n      console.info(`Action ${action.type}: %O`, JSON.parse(JSON.stringify(action)));\n    }\n\n    for (var key in nameReducerMap) {\n      if (nameReducerMap[key].reducer) {\n        newState[key] = nameReducerMap[key].reducer(state[key], action);\n      }\n    }\n\n    if (config.store.debug) {\n      console.info(`State ${action.type}: %O`, JSON.parse(JSON.stringify(newState)));\n    }\n\n    // Mutate to trigger an effect\n    return { ...newState };\n  };\n\n  return { initialState, reducer };\n}\n\n/**\n * Creates a hook that returns the actions just like redux-saga\n */\nexport const useActions = (actions, dispatch) => {\n  const dispatchActions = {};\n\n  for (const key in actions) {\n    dispatchActions[key] = (payload) => {\n      dispatch(actions[key](payload));\n    }\n  }\n\n  return dispatchActions;\n}\n\n/**\n * Higher-order function that creates a middleware hook for our functional sagas\n */\nexport const applyMiddleware = (sagaActions, dispatch) => {\n  return async (action) => {\n    sagaActions.current.push(action);\n    dispatch(action);\n  };\n}\n\n/**\n * Coverts object to query\n *\n * @param Object data key as key and value as value\n */\nexport const toQuery = (data) => {\n  return Object.keys(data).reduce((acc, key) => (\n    `${acc}${acc ? '&' : ''}${key}=${encodeURIComponent(data[key])}`\n  ), '');\n}\n","/**\n * Action types\n */\nexport const BUS_STOPS_FETCH = 'BUS_STOPS_FETCH';\nexport const BUS_STOPS_FETCH_SUCCESS = 'BUS_STOPS_FETCH_SUCCESS';\nexport const BUS_STOPS_FETCH_FAILURE = 'BUS_STOPS_FETCH_FAILURE';\nexport const BUS_STOPS_FILTER = 'BUS_STOPS_FILTER';\nexport const BUS_STOP_SET_SELECTED = 'BUS_STOP_SET_SELECTED';\nexport const BUS_STOP_FETCH = 'BUS_STOP_FETCH';\nexport const BUS_STOP_FETCH_SUCCESS = 'BUS_STOP_FETCH_SUCCESS';\nexport const BUS_STOP_FETCH_FAILURE = 'BUS_STOP_FETCH_FAILURE';\n","import {\n  BUS_STOPS_FETCH,\n  BUS_STOPS_FETCH_SUCCESS,\n  BUS_STOPS_FETCH_FAILURE,\n  BUS_STOPS_FILTER,\n  BUS_STOP_SET_SELECTED,\n  BUS_STOP_FETCH,\n  BUS_STOP_FETCH_SUCCESS,\n  BUS_STOP_FETCH_FAILURE,\n} from 'actions/types';\n\n/**\n * Initial state\n *\n * States here are intended to be used for a global component,\n * but might not be utilized for this demo.\n */\nconst initialState = {\n  busStops: [],\n  filters: {},\n  isLoading: false,\n  isLastPage: false,\n  errorMessage: '',\n  selectedBusStop: null,\n  selectedBusStopIndex: -1\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    /**\n     * API-managed logic fetch\n     */\n    case BUS_STOPS_FETCH:\n      return {\n        ...state,\n        isLoading: true,\n        errorMessage: ''\n      };\n\n    case BUS_STOPS_FETCH_SUCCESS: {\n      const { payload } = action;\n\n      return {\n        ...state,\n        busStops: [...state.busStops, ...(payload?.data || [])],\n        isLoading: false,\n        isLastPage: payload?.isLastPage || state.isLastPage\n      };\n    }\n\n    // Empty on failure\n    case BUS_STOPS_FETCH_FAILURE:\n      return {\n        ...state,\n        busStops: [],\n        isLoading: false,\n        errorMessage: action.payload\n      };\n\n    /**\n     * Used the filter current list or reset when needed\n     */\n    case BUS_STOPS_FILTER: {\n      const { reset, filters = {} } = action.payload;\n\n      return {\n        ...state,\n        busStops: reset ? [] : state.busStops,\n        isLastPage: reset ? false : state.isLastPage,\n        filters\n      };\n    }\n\n    case BUS_STOP_SET_SELECTED:\n      return {\n        ...state,\n        selectedBusStop: {...state.busStops[action.payload]},\n        selectedBusStopIndex: action.payload\n      };\n\n    // Reset is done via saga\n    case BUS_STOP_FETCH:\n      return {\n        ...state,\n        isLoading: true,\n        errorMessage: ''\n      };\n\n    // Sending no data will leave the data untouched\n    case BUS_STOP_FETCH_SUCCESS: {\n      const { payload } = action;\n      const updatedBusStops = state.busStops;\n      const index = state.selectedBusStopIndex;\n      const shouldUpdate = index >= 0 && payload?.data !== undefined;\n\n      if (shouldUpdate) {\n        updatedBusStops[index] = {\n          ...updatedBusStops[index],\n          details: {...payload.data}\n        };\n      }\n\n      return {\n        ...state,\n        busStops: updatedBusStops,\n        isLoading: false,\n        selectedBusStop: shouldUpdate ? updatedBusStops[index] : state.selectedBusStop,\n        selectedBusStopIndex: index\n      };\n    }\n\n    case BUS_STOP_FETCH_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        errorMessage: action.payload\n      };\n\n    default: return { ...state };\n  }\n}\n\nexport default { initialState, reducer };\n","import { combineReducers } from 'utils';\nimport busStopsReducer from './busStopsReducer';\n\n/**\n * Reducers\n */\nconst reducers = combineReducers({\n  busStops: busStopsReducer\n});\n\nexport default reducers;\n","import {\n  BUS_STOPS_FETCH,\n  BUS_STOPS_FETCH_SUCCESS,\n  BUS_STOPS_FETCH_FAILURE,\n  BUS_STOPS_FILTER,\n  BUS_STOP_SET_SELECTED,\n  BUS_STOP_FETCH,\n  BUS_STOP_FETCH_SUCCESS,\n  BUS_STOP_FETCH_FAILURE,\n} from './types';\n\n/**\n * Action Get bus stops\n */\nexport const getBusStops = (filters) => ({\n  type: BUS_STOPS_FETCH,\n  payload: filters\n});\n\n\n/**\n * Action Get bus stops success\n */\nexport const getBusStopsSuccess = ({ data, isLastPage = false }) => ({\n  type: BUS_STOPS_FETCH_SUCCESS,\n  payload: { data, isLastPage }\n});\n\n/**\n * Action Get bus stops failure\n */\nexport const getBusStopsFailure = (error) => ({\n  type: BUS_STOPS_FETCH_FAILURE,\n  payload: error\n});\n\n/**\n * Action Set bus stops filter\n */\nexport const setBusStopsFilter = ({ filters, reset = false }) => ({\n  type: BUS_STOPS_FILTER,\n  payload: { filters, reset }\n});\n\n/**\n * Action Set a bus stop from the bus stop list\n */\nexport const setSelectedBusStop = (index) => ({\n  type: BUS_STOP_SET_SELECTED,\n  payload: index\n});\n\n/**\n * Action Get single bus stop info\n *\n * byId can be used to override the index property currently set\n */\nexport const getBusStop = (byId, reset = false) => ({\n  type: BUS_STOP_FETCH,\n  payload: { byId, reset }\n});\n\n\n/**\n * Action Get single bus stop info success\n */\nexport const getBusStopSuccess = ({ data }) => ({\n  type: BUS_STOP_FETCH_SUCCESS,\n  payload: { data }\n});\n\n/**\n * Action Get single bus stop info failure\n */\nexport const getBusStopFailure = (error) => ({\n  type: BUS_STOP_FETCH_FAILURE,\n  payload: error\n});\n","import axios from 'axios';\nimport config from 'config';\n\nexport const api = axios.create({\n  baseURL: config.api.baseUrl,\n  timeout: 30000,\n  headers: {\n    'X-Api-Key': config.api.apiKey\n  }\n});\n\nexport const request = async (method, url, data = {}) => {\n  try {\n    const { data: responseData } = await api[method](url, data);\n\n    if (responseData.success) {\n      return responseData.data;\n    } else {\n      throw new Error(responseData.message || 'An unknown error occured.');\n    }\n  } catch (error) {\n    // Always handle the errors here if possible, so we know what to hide by default\n    const { response } = error;\n\n    throw new Error(response?.data?.message || 'An unknown error occured.');\n  }\n}\n\n","import {\n  BUS_STOPS_FETCH,\n  BUS_STOP_FETCH\n} from 'actions/types';\nimport {\n  getBusStopsSuccess,\n  getBusStopsFailure,\n  getBusStopSuccess,\n  getBusStopFailure,\n  setSelectedBusStop\n} from 'actions';\nimport { toQuery } from 'utils';\n\nimport { request } from '../api/app';\n\nconst saga = async (action, state, dispatch) => {\n\n  switch (action.type) {\n    case BUS_STOPS_FETCH:\n      await fetchBusStops(dispatch, action, state);\n      break;\n\n    case BUS_STOP_FETCH:\n      await fetchBusStop(dispatch, action, state);\n      break;\n  }\n}\n\nconst fetchBusStops = async (dispatch, action, state) => {\n  const busStops = state.busStops;\n\n  if (busStops.isLastPage) {\n    dispatch(getBusStopsSuccess({}));\n  } else {\n    try {\n      // No pagination response\n      const isLastPage = true;\n      // Since this is an API-managed, we will only, re-query when empty\n      const response = await request('get', `bus-stops?${toQuery(busStops.filters)}`);\n\n      dispatch(getBusStopsSuccess({\n        data: response,\n        isLastPage\n      }));\n    } catch (error) {\n      dispatch(getBusStopsFailure(error.message));\n    }\n  }\n}\n\nconst fetchBusStop = async (dispatch, action, state) => {\n  const { busStops, selectedBusStopIndex } = state.busStops;\n  const { payload: { byId, reset } } = action;\n  const index = selectedBusStopIndex || (byId && busStops.busStops.findIndex((busStop) => busStop.id === byId));\n\n  /**\n   * Set the currently selected whenever one isn't found,\n   * and add an index for it to be filled in on retry.\n   * Can be used for viewing single page details with only id provided\n   */\n  if (!busStops[index]) {\n    if (byId) {\n      dispatch(getBusStopsSuccess([{\n        id: byId\n      }]));\n    }\n    dispatch(setSelectedBusStop(busStops.length - 1));\n\n    return await fetchBusStop(dispatch, action, state);\n  }\n\n  if (busStops[index].details === undefined || reset) {\n    try {\n      // Since this is an API-managed, we will only, re-query when empty\n      const response = await request('get', `bus-stops/${encodeURIComponent(busStops[index].id)}`);\n\n      dispatch(getBusStopSuccess({\n        data: response,\n        index\n      }));\n    } catch (error) {\n      dispatch(getBusStopFailure(error.message));\n    }\n  } else {\n    dispatch(getBusStopSuccess({}));\n  }\n}\n\nexport default saga;\n","import busStopsSaga from './busStopsSaga';\n\n/**\n * Sagas\n */\nexport default [\n  busStopsSaga\n];\n","import React, { createContext, useReducer, useEffect, useCallback, useRef } from 'react';\nimport combinedReducers from './reducers';\nimport sagas from './sagas';\nimport * as actionTemplates from './actions';\nimport { useActions, applyMiddleware } from 'utils';\n\nconst StoreContext = createContext();\n\nconst StoreProvider = ({ children }) => {\n  const { initialState, reducer } = combinedReducers;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const sagaActions = useRef([]);\n  const enhancedDispatch = applyMiddleware(sagaActions, dispatch);\n  const actions = useActions(actionTemplates, enhancedDispatch);\n\n  const runSagas = useCallback(async () => {\n    if (sagaActions?.current && sagaActions?.current.length >= 1) {\n      const action = sagaActions.current.splice(0, 1)[0];\n      await Promise.all(sagas.map((saga) => saga(action, state, enhancedDispatch)));\n      runSagas();\n    }\n  });\n\n  /**\n   * Not the preferred way to do this.\n   * @TODO find a better solution to enchance the dispatch instead of using effect\n   * where await can be inserted into the logic\n   */\n  useEffect(() => {\n    runSagas();\n  }, [state]);\n\n  return (\n    <StoreContext.Provider value={{ state, actions }}>\n      {children}\n    </StoreContext.Provider>\n  )\n}\n\nexport { StoreContext, StoreProvider };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Main = ({ children }) => {\n  \n  return (\n    <div className='main-wrapper'>\n      {children}\n    </div>\n  );\n}\n\nexport default Main;\n\nMain.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(50 50)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"scale(0.8)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(-50 -50)\"\n}, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"translate\",\n  repeatCount: \"indefinite\",\n  dur: \"1s\",\n  values: \"-20 -20;20 -20;0 20;-20 -20\",\n  keyTimes: \"0;0.33;0.66;1\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#ebfffe\",\n  d: \"M44.19 26.158c-4.817 0-9.345 1.876-12.751 5.282c-3.406 3.406-5.282 7.934-5.282 12.751 c0 4.817 1.876 9.345 5.282 12.751c3.406 3.406 7.934 5.282 12.751 5.282s9.345-1.876 12.751-5.282 c3.406-3.406 5.282-7.934 5.282-12.751c0-4.817-1.876-9.345-5.282-12.751C53.536 28.033 49.007 26.158 44.19 26.158z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#7d7d7d\",\n  d: \"M78.712 72.492L67.593 61.373l-3.475-3.475c1.621-2.352 2.779-4.926 3.475-7.596c1.044-4.008 1.044-8.23 0-12.238 c-1.048-4.022-3.146-7.827-6.297-10.979C56.572 22.362 50.381 20 44.19 20C38 20 31.809 22.362 27.085 27.085 c-9.447 9.447-9.447 24.763 0 34.21C31.809 66.019 38 68.381 44.19 68.381c4.798 0 9.593-1.425 13.708-4.262l9.695 9.695 l4.899 4.899C73.351 79.571 74.476 80 75.602 80s2.251-0.429 3.11-1.288C80.429 76.994 80.429 74.209 78.712 72.492z M56.942 56.942 c-3.406 3.406-7.934 5.282-12.751 5.282s-9.345-1.876-12.751-5.282c-3.406-3.406-5.282-7.934-5.282-12.751 c0-4.817 1.876-9.345 5.282-12.751c3.406-3.406 7.934-5.282 12.751-5.282c4.817 0 9.345 1.876 12.751 5.282 c3.406 3.406 5.282 7.934 5.282 12.751C62.223 49.007 60.347 53.536 56.942 56.942z\"\n})))));\n\nfunction SvgSpinner(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    style: {\n      margin: \"auto\",\n      background: \"none\",\n      display: \"block\",\n      shapeRendering: \"auto\"\n    },\n    width: \"200px\",\n    height: \"200px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSpinner);\nexport default __webpack_public_path__ + \"static/media/spinner.dbdf85c2.svg\";\nexport { ForwardRef as ReactComponent };","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\nimport { ReactComponent as Spinner } from 'assets/images/spinner.svg';\n\nconst Loader = ({ fixed, absolute }) => {\n  \n  return (\n    <span className={clsx('loader-wrapper', { fixed, absolute })}>\n      <Spinner />\n    </span>\n  );\n}\n\nexport default memo(Loader);\n\nLoader.propTypes = {\n  fixed: PropTypes.bool,\n  absolute: PropTypes.bool\n};\n","import React, { useCallback, useContext, useEffect } from 'react';\nimport { Marker } from '@react-google-maps/api';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { StoreContext } from 'store';\n\nconst BusStopMarker = ({\n  busStopIndex,\n  onInfoChanged\n}) => {\n  const { state, actions } = useContext(StoreContext);\n  const { setSelectedBusStop, getBusStop } = actions;\n  const { busStops, selectedBusStopIndex } = state.busStops;\n  const busStop = busStops[busStopIndex];\n\n  const getBusStopDetail = useCallback(() => (\n    busStop ? (\n      <div className=\"bus-stop-detail-wrapper\">\n        <h3>{busStop.name}</h3>\n        <ul>\n          {(busStop.details?.nextArrivals || []).map((schedule, key) => {\n            const time = schedule.time.split(':');\n            const utcDate = moment().utc();\n            // Adjust this date to the schedule\n            utcDate.date(utcDate.date() + (schedule.day - utcDate.day()));\n            utcDate.hours(Number(time[0]));\n            utcDate.minutes(Number(time[1]));\n\n            const scheduleDate = utcDate.local();\n\n            return (\n              <li key={key}>\n                <strong>{schedule.bus?.name}</strong>: {scheduleDate.format('h:mm a')} ({scheduleDate.from(new Date())})\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    ) : <h3>We cannot find that bus stop.</h3>\n  ), [busStop]);\n\n  const onMarkerClick = useCallback(() => {\n    setSelectedBusStop(busStopIndex);\n    getBusStop();\n  }, []);\n\n  useEffect(() => {\n    if (selectedBusStopIndex === busStopIndex) {\n      onInfoChanged({\n        position: busStop.position,\n        options: {\n          pixelOffset: {\n            height: -50,\n            width: 0\n          }\n        },\n        info: busStop ? getBusStopDetail() : <h3>Sorry! we cannot find that bus stop.</h3>\n      });\n    }\n  }, [busStop, onInfoChanged, selectedBusStopIndex]);\n\n  return (\n    <div>\n      <Marker\n        position={busStop.position}\n        onClick={onMarkerClick}\n      />\n    </div>\n  );\n}\n\nexport default BusStopMarker;\n\nBusStopMarker.propTypes = {\n  busStopIndex: PropTypes.number.isRequired,\n  onInfoChanged: PropTypes.func\n};\n","import React, { useCallback, useState, useEffect, useContext, useRef, memo } from 'react';\nimport { GoogleMap, InfoBox, InfoWindow, useJsApiLoader } from '@react-google-maps/api';\n\nimport './styles.scss';\nimport Loader from 'components/loader/loader';\nimport BusStopMarker from 'components/busStopMarker/busStopMarker';\nimport { getCurrentLocation } from 'utils';\nimport { StoreContext } from 'store';\nimport Config from 'config';\n\nconst BusStopsMap = () => {\n  const { state, actions } = useContext(StoreContext);\n  const { setBusStopsFilter, getBusStops } = actions;\n  const { busStops, errorMessage, isLoading } = state.busStops;\n\n  const infoWindow = useRef(null);\n\n  const [map, setMap] = useState(null);\n  const [mapDimens, setMapDimens] = useState({});\n  const [userLocation, setUserLocation] = useState(null);\n  const [isInit, setIsInit] = useState(false);\n  const [infoWindowInfo, setInfoWindowInfo] = useState(null);\n  const [mapCenter, setMapCenter] = useState(Config.maps.defaultCenter);\n  const { isLoaded } = useJsApiLoader({\n    id: 'bus-stops-map',\n    googleMapsApiKey: Config.maps.apiKey\n  });\n\n  useEffect(() => {\n    initMapDimensions();\n    initUserLocation();\n\n    window.addEventListener('resize', initMapDimensions);\n\n    return () => {\n      window.removeEventListener('resize', initMapDimensions);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (map && userLocation) {\n      setBusStopsFilter({\n        filters: { near: `${userLocation.lat},${userLocation.lng}` },\n        reset: true\n      });\n      getBusStops();\n\n      map.setCenter(userLocation);\n    }\n  }, [userLocation, map]);\n\n  // useEffect(() => {\n  //   infoWindow?.current && infoWindow.current.close();\n  //   console.log('close');\n  // }, [isLoading]);\n\n  const initMapDimensions = () => {\n    setMapDimens({\n      width:`${window.innerWidth}px`,\n      height:`${window.innerHeight}px`,\n    });\n  };\n\n  const initUserLocation = async () => {\n    try {\n      const { coords } = await getCurrentLocation();\n      setUserLocation({\n        lat: coords.latitude,\n        lng: coords.longitude,\n      });\n    } catch (_) {\n      // Just ignore the error we just use the default center\n      setUserLocation(Config.maps.defaultCenter);\n    } finally {\n      setIsInit(true);\n    }\n  };\n\n  const onLoad = useCallback((loadedMap) => {\n    setMap(loadedMap);\n  }, [setMap]);\n\n  const onUnmount = useCallback(() => {\n    setMap(null);\n  }, [setMap]);\n\n  const onCenterChanged = useCallback(() => {\n    if (map) {\n      const center = map.getCenter();\n      setMapCenter({\n        lat: center.lat(),\n        lng: center.lng()\n      });\n    }\n  }, [setMapCenter, map]);\n\n  const onInfoChanged = useCallback((info) => {\n    if (infoWindow?.current && map) {\n      infoWindow.current.open(map);\n    }\n    setInfoWindowInfo(info);\n  }, [setInfoWindowInfo, map]);\n\n  return isLoaded ? (\n    <div className='bus-stops-map-wrapper'>\n      {(isLoading || !isInit) && <Loader absolute />}\n      <GoogleMap\n        mapContainerStyle={mapDimens}\n        center={Config.maps.defaultCenter}\n        zoom={Config.maps.defaultZoom}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n        onCenterChanged={onCenterChanged}\n      >\n        {infoWindowInfo?.position && (\n          <InfoWindow\n            position={infoWindowInfo.position}\n            options={infoWindowInfo.options || {}}\n            onLoad={(ele) => infoWindow.current = ele}\n          >\n            {infoWindowInfo?.info || <div className='info-window-placeholder' />}\n          </InfoWindow>\n        )}\n        {busStops.map((busStop, key) => (\n          <BusStopMarker\n            key={key}\n            busStopIndex={key}\n            onInfoChanged={onInfoChanged}\n          />\n        ))}\n        {errorMessage && (\n          <InfoBox position={mapCenter}>\n            <h1 className='error'>{errorMessage}</h1>\n          </InfoBox>\n        )}\n      </GoogleMap>\n    </div>\n  ) : <Loader fixed />\n}\n\nexport default memo(BusStopsMap);\n","import React from 'react';\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport BusStopsMap from './busStopsMap';\n\nconst BusStops = ({ match }) => (\n  <Switch>\n    <Route path={`${match.path}`} component={BusStopsMap}></Route>\n  </Switch>\n);\n\nexport default BusStops;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport { StoreProvider } from 'store';\nimport MainLayout from 'components/layouts/main';\nimport BusStops from 'routes/busStops';\n\nconst App = () => (\n  <StoreProvider>\n    <MainLayout>\n        <Router>\n          <Switch>\n            <Route path=\"/\" component={BusStops}></Route>\n          </Switch>\n        </Router>\n    </MainLayout>\n  </StoreProvider>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'assets/styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}